// Mocks generated by Mockito 5.3.2 from annotations
// in tmdb_prj/test/src/presentation/pages/person/person_details_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:either_dart/either.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tmdb_prj/src/app/errors/failure.dart' as _i6;
import 'package:tmdb_prj/src/data/providers/remote/params/details_param.dart'
    as _i9;
import 'package:tmdb_prj/src/domain/entities/people.dart' as _i7;
import 'package:tmdb_prj/src/domain/repositories/people_repository.dart' as _i2;
import 'package:tmdb_prj/src/domain/usecases/people/get_person_details.dart'
    as _i4;
import 'package:tmdb_prj/src/domain/usecases/people/get_person_pictures.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePeopleRepository_0 extends _i1.SmartFake
    implements _i2.PeopleRepository {
  _FakePeopleRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetPersonDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPersonDetails extends _i1.Mock implements _i4.GetPersonDetails {
  MockGetPersonDetails() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PeopleRepository get peopleRepository => (super.noSuchMethod(
        Invocation.getter(#peopleRepository),
        returnValue: _FakePeopleRepository_0(
          this,
          Invocation.getter(#peopleRepository),
        ),
      ) as _i2.PeopleRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failur, _i7.People>> call(int? personID) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [personID],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failur, _i7.People>>.value(
            _FakeEither_1<_i6.Failur, _i7.People>(
          this,
          Invocation.method(
            #call,
            [personID],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failur, _i7.People>>);
}

/// A class which mocks [GetPersonPictures].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPersonPictures extends _i1.Mock implements _i8.GetPersonPictures {
  MockGetPersonPictures() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PeopleRepository get peopleRepository => (super.noSuchMethod(
        Invocation.getter(#peopleRepository),
        returnValue: _FakePeopleRepository_0(
          this,
          Invocation.getter(#peopleRepository),
        ),
      ) as _i2.PeopleRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failur, List<String>>> call(
          _i9.PersonDetailsParam? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failur, List<String>>>.value(
            _FakeEither_1<_i6.Failur, List<String>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failur, List<String>>>);
}
